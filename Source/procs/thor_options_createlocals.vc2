*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="thor_options_createlocals.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS basecheckbox AS checkbox 
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: ccontrolsource
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Alignment = 0
	Caption = "Check1"
	ccontrolsource = 
	Height = 17
	Name = "basecheckbox"
	Width = 60
	_memberdata = <VFPData>
		<memberdata name="ccontrolsource" display="cControlSource"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE InteractiveChange
		Local lcControlSource
		lcControlSource	= This.cControlSource
		_oPEMEditor.oPrefs.&lcControlSource = This.Value
		This.Parent.lAnyChanges = .T.
	ENDPROC

	PROCEDURE Refresh
		Local lcControlSource
		lcControlSource	= This.cControlSource
		This.Value		= _oPEMEditor.oPrefs.&lcControlSource
	ENDPROC

ENDDEFINE

DEFINE CLASS basecombobox AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: ccontrolsource
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	ccontrolsource = 
	Height = 24
	Name = "basecombobox"
	Width = 100
	_memberdata = <VFPData>
		<memberdata name="ccontrolsource" display="cControlSource"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE InteractiveChange
		Local lcControlSource
		lcControlSource	= This.cControlSource
		_oPEMEditor.oPrefs.&lcControlSource = This.Value
		This.Parent.lAnyChanges = .T.
	ENDPROC

	PROCEDURE Refresh
		Local lcControlSource
		lcControlSource	= This.cControlSource
		This.Value		= _oPEMEditor.oPrefs.&lcControlSource
	ENDPROC

ENDDEFINE

DEFINE CLASS baselabel AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "Label1"
	Height = 17
	Name = "baselabel"
	Width = 40

ENDDEFINE

DEFINE CLASS basetextbox AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*p: ccontrolsource
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	ccontrolsource = 
	Height = 23
	Name = "basetextbox"
	Width = 100
	_memberdata = <VFPData>
		<memberdata name="ccontrolsource" display="cControlSource"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE InteractiveChange
		Local lcControlSource
		lcControlSource	= This.cControlSource
		_oPEMEditor.oPrefs.&lcControlSource = This.Value
		This.Parent.lAnyChanges = .T.
	ENDPROC

	PROCEDURE Refresh
		Local lcControlSource
		lcControlSource	= This.cControlSource
		This.Value		= _oPEMEditor.oPrefs.&lcControlSource
	ENDPROC

ENDDEFINE

DEFINE CLASS clscreatelocals AS container 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Baselabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIndentationmethodfor" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSelectIndentation" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAutoMoveWindow" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLocalsPureLocal" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkpreferences2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Chkpreferences1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMoveLOCALsto" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRemoveOrphans" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkMultiplevariablesper" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkCommasBeforeLocals" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Basecheckbox3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkLocalsAlignAS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIndentforeach2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txt3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: lanychanges
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	Anchor = 15
	Height = 300
	lanychanges = .F.
	Name = "clscreatelocals"
	Width = 345
	_memberdata = <VFPData>
		<memberdata name="lanychanges" display="lAnyChanges"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'Basecheckbox3' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Sort Locals  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "Basecheckbox3", ;
		TabIndex = 6, ;
		Top = 120, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Baselabel1' AS label WITH ;
		Alignment = 2, ;
		Anchor = 10, ;
		Caption = "Create Locals", ;
		FontBold = .T., ;
		ForeColor = 0,0,255, ;
		Height = 18, ;
		Left = 5, ;
		Name = "Baselabel1", ;
		TabIndex = 1, ;
		Top = 12, ;
		Width = 335
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'cboSelectIndentation' AS basecombobox WITH ;
		Height = 22, ;
		Left = 22, ;
		Name = "cboSelectIndentation", ;
		TabIndex = 3, ;
		Top = 55, ;
		Width = 297
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkAutoMoveWindow' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Create LOCALs as part of BeautifyX  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkAutoMoveWindow", ;
		TabIndex = 15, ;
		Top = 260, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkCommasBeforeLocals' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Places commas before locals  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkCommasBeforeLocals", ;
		TabIndex = 9, ;
		Top = 177, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLocalsAlignAS' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Align AS ", ;
		ControlSource = "", ;
		Height = 17, ;
		Left = 24, ;
		Name = "chkLocalsAlignAS", ;
		TabIndex = 13, ;
		ToolTipText = "Align the as keywords in new LOCAL statement. ", ;
		Top = 220, ;
		Width = 259, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkLocalsPureLocal' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "LOCAL single on line", ;
		ControlSource = "", ;
		Height = 17, ;
		Left = 24, ;
		Name = "chkLocalsPureLocal", ;
		TabIndex = 12, ;
		ToolTipText = "LOCAL as only word on the line. ", ;
		Top = 200, ;
		Width = 259, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkMoveLOCALsto' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Move/merge LOCALs statements to top  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkMoveLOCALsto", ;
		TabIndex = 4, ;
		Top = 82, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkMultiplevariablesper' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Multiple variables per line  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkMultiplevariablesper", ;
		TabIndex = 8, ;
		Top = 158, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkpreferences1' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "All variables use 'AS datatype' phrase  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "Chkpreferences1", ;
		TabIndex = 7, ;
		Top = 139, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'Chkpreferences2' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "In PRGs, create LOCALs for all Procedures  ", ;
		ControlSource = "", ;
		Height = 17, ;
		Left = 24, ;
		Name = "Chkpreferences2", ;
		TabIndex = 14, ;
		Top = 240, ;
		Width = 259, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkRemoveOrphans' AS basecheckbox WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Remove orphan LOCALs  ", ;
		ControlSource = "", ;
		Height = 16, ;
		Left = 43, ;
		Name = "chkRemoveOrphans", ;
		TabIndex = 5, ;
		Top = 101, ;
		Width = 240, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblIndentationmethodfor' AS baselabel WITH ;
		Alignment = 0, ;
		AutoSize = .F., ;
		Caption = "Selection of variables ", ;
		Height = 17, ;
		Left = 25, ;
		Name = "lblIndentationmethodfor", ;
		TabIndex = 2, ;
		Top = 39, ;
		Width = 243
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="label" />

	ADD OBJECT 'lblIndentforeach2' AS baselabel WITH ;
		Alignment = 1, ;
		AutoSize = .F., ;
		Caption = "Line Width", ;
		Height = 16, ;
		Left = 60, ;
		Name = "lblIndentforeach2", ;
		TabIndex = 11, ;
		Top = 180, ;
		Width = 200
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="label" />

	ADD OBJECT 'Line1' AS line WITH ;
		Anchor = 10, ;
		Height = 0, ;
		Left = 2, ;
		Name = "Line1", ;
		Top = 34, ;
		Width = 380
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'txt3' AS basetextbox WITH ;
		ControlSource = "", ;
		Height = 22, ;
		Left = 270, ;
		Name = "txt3", ;
		TabIndex = 10, ;
		Top = 176, ;
		Width = 47
		*< END OBJECT: ClassLib="thor_options_createlocals.vcx" BaseClass="textbox" />
	
	PROCEDURE Destroy
		If This.lAnyChanges
			_oPEMEditor.oPrefs.SaveValues()
		Endif
		
	ENDPROC

	PROCEDURE Init
		This.SetAll ('FontSize', This.Parent.GetOption ('FontSize'))
		Execscript (_Screen.cThorDispatcher, 'PEMEditor_StartIDETools')
		
	ENDPROC

	PROCEDURE Resize
		*fix thors height problem
		If This.Height<300 Then
			Thisform.Height    = Thisform.Height+300-This.Height
			Thisform.MinHeight = Thisform.Height
		Endif &&this.Height<300
		
		
	ENDPROC

	PROCEDURE Basecheckbox3.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lSortCreatedLocals'
			.ToolTipText	= 'If not sorted, names will appear in order they are assigned.'
		Endwith
		
	ENDPROC

	PROCEDURE cboSelectIndentation.Init
		With This
			.AddItem ("Lowercase 'L' variables only")
			.AddItem ("Lowercase 'L' variables only; commented list of others")
			.AddItem ("All variables, lowercase 'L' variables separately")
			.AddItem ('All variables, merged')
			.cControlSource  = 'nLocalsSelectionType'
		Endwith
		
	ENDPROC

	PROCEDURE chkAutoMoveWindow.Init
		DoDefault()
		
		With This
			.cControlSource = 'lBeautifyLocals'
		Endwith
		
	ENDPROC

	PROCEDURE chkCommasBeforeLocals.Init
		DoDefault()
		
		With This
			.cControlSource = 'lCommasBeforeLocals'
			.ToolTipText   = 'In continuation lines, place the comma before each local, rather than after.'
		Endwith
		
	ENDPROC

	PROCEDURE chkCommasBeforeLocals.Refresh
		DoDefault()
		This.Visible = not _oPEMEditor.oPrefs.lLocalsMultPerLine
		
	ENDPROC

	PROCEDURE chkLocalsAlignAS.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lLocalsAlignAS'
		Endwith
		
	ENDPROC

	PROCEDURE chkLocalsAlignAS.Refresh
		DoDefault()
		This.Visible = Not _oPEMEditor.oPrefs.lLocalsMultPerLine And _oPEMEditor.oPrefs.lLocalsUseAS
		
	ENDPROC

	PROCEDURE chkLocalsPureLocal.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lLocalsPureLocal'
		Endwith
		
	ENDPROC

	PROCEDURE chkLocalsPureLocal.Refresh
		DoDefault()
		This.Visible = Not _oPEMEditor.oPrefs.lLocalsMultPerLine
		
	ENDPROC

	PROCEDURE chkMoveLOCALsto.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lMoveLocals'
			.ToolTipText	= 'Move all LOCALs statements so that they are together at the top of the procedure and merge them with any new variables that are to be added.'
		Endwith
		
	ENDPROC

	PROCEDURE chkMoveLOCALsto.Valid
		This.Parent.chkRemoveOrphans.Refresh()
		
	ENDPROC

	PROCEDURE chkMultiplevariablesper.Init
		DoDefault()
		
		With This
			.cControlSource = 'lLocalsMultPerLine'
		Endwith
		
	ENDPROC

	PROCEDURE chkMultiplevariablesper.Valid
		DoDefault()
		This.Parent.Refresh()
		
	ENDPROC

	PROCEDURE Chkpreferences1.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lLocalsUseAS'
			.ToolTipText	= "All variables in the LOCALs statements are shown with the 'AS datatype', one per line, where the datatype is determined by the second letter of the variable name"
		Endwith
		
	ENDPROC

	PROCEDURE Chkpreferences1.Valid
		DoDefault()
		This.Parent.Refresh()
		
	ENDPROC

	PROCEDURE Chkpreferences2.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lLocalsAllProcs'
		Endwith
		
	ENDPROC

	PROCEDURE chkRemoveOrphans.Init
		DoDefault()
		
		With This
			.cControlSource	= 'lRemoveOrphanLocals'
			.ToolTipText	= 'Orphan locals are names that appear in the LOCALs list but are never assigned values. This option only takes effect if the option to Move/merge LOCALs statements to top (above) is also chosen.'
		Endwith
		
	ENDPROC

	PROCEDURE chkRemoveOrphans.Refresh
		DoDefault()
		If _oPEMEditor.oPrefs.lMoveLocals
			This.Enabled = .T.
		Else
			This.Value = .F.
			This.Enabled = .F.
		Endif
		
	ENDPROC

	PROCEDURE lblIndentforeach2.Refresh
		DoDefault()
		This.Visible = _oPEMEditor.oPrefs.lLocalsMultPerLine
		
	ENDPROC

	PROCEDURE txt3.Init
		This.cControlSource = 'nLocalsLineWidth'
		
	ENDPROC

	PROCEDURE txt3.Refresh
		DoDefault()
		This.Visible = _oPEMEditor.oPrefs.lLocalsMultPerLine
		
	ENDPROC

ENDDEFINE
